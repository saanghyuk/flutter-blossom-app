"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var airbridge_loader_1 = require("./library/airbridge_loader");
var flat_keys_1 = require("./library/flat_keys");
var throwOnServerSide = function () {
    throw Error('Airbridge can not be runned on server side');
};
var AirbridgeMock = ({
    init: throwOnServerSide,
    get isSDKEnabled() {
        return window.airbridge.isSDKEnabled;
    },
    fetchResource: throwOnServerSide,
    setBanner: throwOnServerSide,
    setDownloads: throwOnServerSide,
    setDeeplinks: throwOnServerSide,
    openDeeplink: throwOnServerSide,
    sendWeb: throwOnServerSide,
    createTouchpoint: throwOnServerSide,
    setUserId: throwOnServerSide,
    setUserEmail: throwOnServerSide,
    setUserPhone: throwOnServerSide,
    setUserAttributes: throwOnServerSide,
    setUserAlias: throwOnServerSide,
    clearUser: throwOnServerSide,
    setDeviceAlias: throwOnServerSide,
    removeDeviceAlias: throwOnServerSide,
    clearDeviceAlias: throwOnServerSide,
    events: {
        send: throwOnServerSide,
        signIn: throwOnServerSide,
        signUp: throwOnServerSide,
        signOut: throwOnServerSide,
        purchased: throwOnServerSide,
        addedToCart: throwOnServerSide,
        productDetailsViewEvent: throwOnServerSide,
        homeViewEvent: throwOnServerSide,
        productListViewEvent: throwOnServerSide,
        searchResultViewEvent: throwOnServerSide,
        wait: throwOnServerSide,
    }
});
var prepare = function () {
    (0, airbridge_loader_1.default)();
    var flatKeys = (0, flat_keys_1.FlatKeys)(AirbridgeMock);
    var _loop_1 = function (flatKey) {
        var method = flatKey.pop();
        if (!method || method === 'isSDKEnabled') {
            return "continue";
        }
        var mockObject = flatKey.reduce(function (object, member) { return object[member]; }, AirbridgeMock);
        mockObject[method] = function () {
            var object = flatKey.reduce(function (object, member) { return object[member]; }, window.airbridge);
            object[method].apply(object, arguments);
        };
    };
    for (var _i = 0, flatKeys_1 = flatKeys; _i < flatKeys_1.length; _i++) {
        var flatKey = flatKeys_1[_i];
        _loop_1(flatKey);
    }
};
if (typeof window !== 'undefined') {
    prepare();
}
var airbridge = AirbridgeMock;
exports.default = airbridge;
